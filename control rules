data1 = read.csv("/Users/binbin/Documents/PhD/Research/Break event/data/rule.csv",header=TRUE)
data <- as.matrix(data1)
data2<- as.data.frame(data)
x <- split(data2, data2$x0)
y<- as.data.frame(x)


we1 <- function(x, m = mean(x), s = sd(x)) {
    # Nelson's QC rule 1: detect values outside + or -3 sd
    m<-which(abs((x - m) / s) >= 3)
	return(length(m))
}

we2 <- function(x, m = mean(x), s = sd(x), minrun = 3) {
    # Nelson's QC rule 5: two out of 3 >2 sd from mean in the same direction
    n <- length(x)
    pos <- 1 * ((x - m) / s > 2)
    neg <- 1 * ((x - m) / s < -2)
    poscounts <- pos
    negcounts <- neg
    for (rl in 2:minrun) {
        poscounts <- poscounts + c(pos[rl:n], rep(0, rl - 1))
        negcounts <- negcounts + c(neg[rl:n], rep(0, rl - 1))
    }
    counts <- apply(cbind(poscounts, negcounts), 1, max)
    m<-which(counts >= minrun -1)
	return(length(m))
}

we3 <- function(x, m = mean(x), s = sd(x), minrun = 5) {
    # Nelson's QC rule 6: four out of five > 1 sd from mean in the same direction
    n <- length(x)
    pos <- 1 * ((x - m) / s > 1)
    neg <- 1 * ((x - m) / s < -1)
    poscounts <- pos
    negcounts <- neg
    for (rl in 2:minrun) {
        poscounts <- poscounts + c(pos[rl:n], rep(0, rl - 1))
        negcounts <- negcounts + c(neg[rl:n], rep(0, rl - 1))
    }
    counts <- apply(cbind(poscounts, negcounts), 1, max)
    m<-which(counts >= minrun - 1)
	return(length(m))
}

we4 <- function(x, m = mean(x), minrun = 9) {
    # Nelson's QC rule 2: detect runs of >= 8 points on the same side of the mean
    n <- length(x)
    counts <- sign(x - m)
    result <- counts
    for (runlength in 2:minrun)
        result <- result + c(counts[runlength:n], rep(0, runlength - 1))
    m<-which(abs(result) >= minrun)
	return(length(m))
}

we5 <- function(x, m = mean(x), s = sd(x)) {
    # Nelson's QC rule 1: detect values outside + or -3 sd
    m<-which(abs((x - m) / s) <= 3)
	return(length(m))
}

we6 <- function(x, m = mean(x), s = sd(x), minrun = 3) {
    # Nelson's QC rule 5: two out of 3 >2 sd from mean in the same direction
    n <- length(x)
    pos <- 1 * ((x - m) / s > 2)
    neg <- 1 * ((x - m) / s < -2)
    poscounts <- pos
    negcounts <- neg
    for (rl in 2:minrun) {
        poscounts <- poscounts + c(pos[rl:n], rep(0, rl - 1))
        negcounts <- negcounts + c(neg[rl:n], rep(0, rl - 1))
    }
    counts <- apply(cbind(poscounts, negcounts), 1, max)
    m<-which(counts >= minrun -1)
	return(length(m))
}

we7 <- function(x, m = mean(x), s = sd(x), minrun = 5) {
    # Nelson's QC rule 6: four out of five > 1 sd from mean in the same direction
    n <- length(x)
    pos <- 1 * ((x - m) / s > 1)
    neg <- 1 * ((x - m) / s < -1)
    poscounts <- pos
    negcounts <- neg
    for (rl in 2:minrun) {
        poscounts <- poscounts + c(pos[rl:n], rep(0, rl - 1))
        negcounts <- negcounts + c(neg[rl:n], rep(0, rl - 1))
    }
    counts <- apply(cbind(poscounts, negcounts), 1, max)
    m<-which(counts >= minrun - 1)
	return(length(m))
}

we8 <- function(x, m = mean(x), minrun = 8) {
    # Nelson's QC rule 2: detect runs of >= 9 points on the same side of the mean
    n <- length(x)
    counts <- sign(x - m)
    result <- counts
    for (runlength in 2:minrun)
        result <- result + c(counts[runlength:n], rep(0, runlength - 1))
    m<-which(abs(result) >= minrun)
	return(length(m))
}

we9 <- function(x, m = mean(x), s = sd(x), minrun = 15) {
    # Nelson's QC rule 7: >= 15 points in a row within 1 sd from the mean
    n <- length(x)
    within <- 1 * (abs((x - m) / s) < 1)
    counts <- within
    for (rl in 2:minrun)
        counts <- counts + c(within[rl:n], rep(0, rl - 1))
    m<-which(counts >= minrun)
	return(length(m))
}

we10 <- function(x, m = mean(x), s = sd(x), minrun = 8) {
    # Nelson's QC rule 8: >= 8 points in a row all outside the m + -1s range
    n <- length(x)
    outofrange <- 1 * (abs((x - m) / s) > 1)
    counts <- outofrange
    for (rl in 2:minrun)
        counts <- counts + c(outofrange[rl:n], rep(0, rl - 1))
    m<-which(counts >= minrun)
    return(length(m))
}


nelsonr1 <- function(x, m = mean(x), minrun = 9) {
    # Nelson's QC rule 2: detect runs of >= 9 points on the same side of the mean
    n <- length(x)
    counts <- sign(x - m)
    result <- counts
    for (runlength in 2:minrun)
        result <- result + c(counts[runlength:n], rep(0, runlength - 1))
    m<-which(abs(result) >= minrun)
	return(length(m))
}

nelsonr2 <- function(x, minrun = 6) {
    # Nelson's QC rule 3: detect strict increase or decrease in >= 6 points in a row
    # Between 6 points you have 5 instances of increasing or decreasing. Therefore minrun - 1.
    n <- length(x)
    signs <- sign(c(x[-1], x[n]) - x)
    counts <- signs
    for (rl in 2:(minrun - 1)) {
        counts <- counts + c(signs[rl:n], rep(0, rl - 1))
    }
    m<-which(abs(counts) >= minrun - 1)
	return(length(m))
}

nelsonr3 <- function(x, m = mean(x), minrun = 14, directing_from_mean = FALSE) {
    # Nelson's QC rule 4: 14 points in a row alternating in direction from the mean,
    # or 14 points in a row alternating in increase and decrease
    n <- length(x)
    if (directing_from_mean == TRUE) {
        signs <- sign(x - m)
    } else {
        signs <- sign(c(x[-1],x[n]) - x)
    }
    counts <- signs
    fac <- -1
    for (rl in 2:minrun) {
        counts <- counts + fac * c(signs[rl:n], rep(0, rl - 1))
        fac <- -fac
    }
    counts <- abs(counts)
    m<-which(counts >= minrun)
	return(length(m))
}

mydata1<-apply(y, 2, we1)
mydata2<-apply(y, 2, we2)
mydata3<-apply(y, 2, we3)
mydata4<-apply(y, 2, we4)
mydata5<-apply(y, 2, we5)
mydata6<-apply(y, 2, we6)
mydata7<-apply(y, 2, we7)
mydata8<-apply(y, 2, we8)
mydata9<-apply(y, 2, we9)
mydata10<-apply(y, 2, we10)
mydata11<-apply(y, 2, nelsonr3)
mydata12<-apply(y, 2, nelsonr3)
mydata13<-apply(y, 2, nelsonr3)
write.csv(mydata1,file="/Users/binbin/Documents/PhD/Research/Break event/data/we1.csv")
write.csv(mydata2,file="/Users/binbin/Documents/PhD/Research/Break event/data/we2.csv")
write.csv(mydata3,file="/Users/binbin/Documents/PhD/Research/Break event/data/we3.csv")
write.csv(mydata4,file="/Users/binbin/Documents/PhD/Research/Break event/data/we4.csv")
write.csv(mydata5,file="/Users/binbin/Documents/PhD/Research/Break event/data/we5.csv")
write.csv(mydata6,file="/Users/binbin/Documents/PhD/Research/Break event/data/we6.csv")
write.csv(mydata7,file="/Users/binbin/Documents/PhD/Research/Break event/data/we7.csv")
write.csv(mydata8,file="/Users/binbin/Documents/PhD/Research/Break event/data/we8.csv")
write.csv(mydata9,file="/Users/binbin/Documents/PhD/Research/Break event/data/we9.csv")
write.csv(mydata10,file="/Users/binbin/Documents/PhD/Research/Break event/data/we10.csv")
write.csv(mydata11,file="/Users/binbin/Documents/PhD/Research/Break event/data/nelsonr1.csv")
write.csv(mydata12,file="/Users/binbin/Documents/PhD/Research/Break event/data/nelsonr2.csv")
write.csv(mydata13,file="/Users/binbin/Documents/PhD/Research/Break event/data/nelsonr3.csv")
